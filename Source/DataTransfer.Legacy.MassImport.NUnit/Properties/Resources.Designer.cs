//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataTransfer.Legacy.MassImport.NUnit.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataTransfer.Legacy.MassImport.NUnit.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///		&apos;&lt;field id=&quot;100123&quot; type=&quot;3&quot; name=&quot;Boolean Field&quot; formatstring=&quot;&quot;&gt;&apos; + 
        ///			&apos;&lt;oldValue&gt;&apos; + CASE  DELETED.[BooleanField] WHEN 1 THEN &apos;True&apos; WHEN 0 THEN &apos;False&apos; ELSE &apos;&apos; END + &apos;&lt;/oldValue&gt;&apos; +
        ///			&apos;&lt;newValue&gt;&apos; + CASE INSERTED.[BooleanField] WHEN 1 THEN &apos;True&apos; WHEN 0 THEN &apos;False&apos; ELSE &apos;&apos; END + &apos;&lt;/newValue&gt;&apos; +
        ///		&apos;&lt;/field&gt;&apos; +
        ///		&apos;&lt;field id=&quot;100123&quot; type=&quot;5&quot; name=&quot;Code Field&quot; formatstring=&quot;&quot;&gt;&apos; + 
        ///			ISNULL(&apos;&lt;setChoice&gt;&apos; + NULLIF(N.[CodeField] COLLATE Test_Collation, &apos;&apos;) + &apos;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AuditDetailsBuilderTests_detailsClause_Audit {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_detailsClause_Audit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_detailsClause_NoAudit {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_detailsClause_NoAudit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///	&apos;&lt;extractedTextEncodingPageCode&gt;&apos; + ISNULL(CAST(N.[ExtractedTextEncodingPageCode] AS NVARCHAR(200)), &apos;-1&apos;) + &apos;&lt;/extractedTextEncodingPageCode&gt;&apos; +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_detailsClause_NoAudit_Encoding {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_detailsClause_NoAudit_Encoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ,
        ///		&apos;&lt;unsetChoice&gt;&apos; + (SELECT CAST(MappedArtifactID AS VARCHAR(10)) FROM [Resource].[RELNATTMPMAP_AAD09DF6-A4C7-4DF0-B963-0050C7809000] M1 WHERE M1.ArtifactID = M.ArtifactID AND M1.FieldArtifactID = 100123 AND M1.IsNew = 0) + &apos;&lt;/unsetChoice&gt;&apos; [CodeField].
        /// </summary>
        internal static string AuditDetailsBuilderTests_mapClause_Audit {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_mapClause_Audit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///		&apos;&lt;field id=&quot;100123&quot; type=&quot;8&quot; name=&quot;MultiCode Field&quot; formatstring=&quot;&quot;&gt;&apos; + 
        ///			ISNULL(CAST(GM.[MultiCodeField IsNew] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;) +
        ///		&apos;&lt;/field&gt;&apos; +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_MultiCode_detailsClause_MergeAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_MultiCode_detailsClause_MergeAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///		&apos;&lt;field id=&quot;100123&quot; type=&quot;8&quot; name=&quot;MultiCode Field&quot; formatstring=&quot;&quot;&gt;&apos; + 
        ///			ISNULL(CAST(GM.[MultiCodeField IsNew] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;) +
        ///			ISNULL(CAST(GM.[MultiCodeField] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;) +
        ///		&apos;&lt;/field&gt;&apos; +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_MultiCode_detailsClause_ReplaceAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_MultiCode_detailsClause_ReplaceAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ,
        ///		(
        ///			SELECT
        ///				MappedArtifactID [setChoice]
        ///			FROM [Resource].[RELNATTMPMAP_AAD09DF6-A4C7-4DF0-B963-0050C7809000] M1
        ///			WHERE M1.ArtifactID = M.ArtifactID AND M1.FieldArtifactID = 100123 AND M1.IsNew = 1
        ///			FOR XML PATH (&apos;&apos;), TYPE
        ///		) [MultiCodeField IsNew].
        /// </summary>
        internal static string AuditDetailsBuilderTests_MultiCode_mapClause_MergeAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_MultiCode_mapClause_MergeAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ,
        ///		(
        ///			SELECT
        ///				MappedArtifactID [setChoice]
        ///			FROM [Resource].[RELNATTMPMAP_AAD09DF6-A4C7-4DF0-B963-0050C7809000] M1
        ///			WHERE M1.ArtifactID = M.ArtifactID AND M1.FieldArtifactID = 100123 AND M1.IsNew = 1
        ///			FOR XML PATH (&apos;&apos;), TYPE
        ///		) [MultiCodeField IsNew],
        ///		(
        ///			SELECT
        ///				MappedArtifactID [unsetChoice]
        ///			FROM [Resource].[RELNATTMPMAP_AAD09DF6-A4C7-4DF0-B963-0050C7809000] M1
        ///			WHERE M1.ArtifactID = M.ArtifactID AND M1.FieldArtifactID = 100123 AND M1.IsNew = 0
        ///			FOR XML PATH (&apos;&apos;), TYPE
        ///		) [Multi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AuditDetailsBuilderTests_MultiCode_mapClause_ReplaceAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_MultiCode_mapClause_ReplaceAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///&apos;
        ///&lt;field id=&quot;100123&quot; type=&quot;13&quot; name=&quot;Objects Field&quot; formatstring=&quot;&quot;&gt;&apos; +
        ///			ISNULL(CAST(GM.[ObjectsField IsNew] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;)  +
        ///&apos;&lt;/field&gt;&apos; +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_Objects_detailsClause_MergeAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_Objects_detailsClause_MergeAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 	CAST(N&apos;&lt;auditElement&gt;&apos; AS NVARCHAR(MAX)) +
        ///&apos;
        ///&lt;field id=&quot;100123&quot; type=&quot;13&quot; name=&quot;Objects Field&quot; formatstring=&quot;&quot;&gt;&apos; +
        ///			ISNULL(CAST(GM.[ObjectsField IsNew] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;)  +
        ///			ISNULL(CAST(GM.[ObjectsField] AS NVARCHAR(MAX)) COLLATE Test_Collation, &apos;&apos;)  +
        ///&apos;&lt;/field&gt;&apos; +
        ///	&apos;&lt;/auditElement&gt;&apos;,.
        /// </summary>
        internal static string AuditDetailsBuilderTests_Objects_detailsClause_ReplaceAll {
            get {
                return ResourceManager.GetString("AuditDetailsBuilderTests_Objects_detailsClause_ReplaceAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=102&apos;;
        ///
        ///WITH CTE (DocumentArtifactID, CodeArtifactID)
        ///AS
        ///(
        ///	SELECT /* IncludeDistinctClause */
        ///		N.ArtifactID, C.CodeArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceAppend {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceAppend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=102&apos;;
        ///
        ///WITH CTE (DocumentArtifactID, CodeArtifactID)
        ///AS
        ///(
        ///	SELECT /* IncludeDistinctClause */
        ///		N.ArtifactID, C.CodeArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceOverlayMerge {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceOverlayMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=102&apos;;
        ///
        ///
        ///DELETE Z
        ///OUTPUT 
        ///	DELETED.[AssociatedArtifactID], 
        ///	DELETED.[CodeArtifactID], 
        ///	2, 
        ///	0 
        ///INTO 
        ///	[Resource].[RELNATTMP [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceOverlayReplace {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldExecuteQueryForMultiChoiceOverlayReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=101&apos;;
        ///
        ///WITH CTE (DocumentArtifactID, CodeArtifactID)
        ///AS
        ///(
        ///	SELECT /* IncludeDistinctClause */
        ///		N.ArtifactID, C.CodeArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldExecuteQueryForSingleChoice {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldExecuteQueryForSingleChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=101&apos;;
        ///
        ///WITH CTE (DocumentArtifactID, CodeArtifactID)
        ///AS
        ///(
        ///	SELECT /* IncludeDistinctClause */
        ///		N.ArtifactID, C.CodeArtifact [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldExecuteQueryForTwoChoices {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldExecuteQueryForTwoChoices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF EXISTS (
        ///SELECT 
        ///	T.CodeArtifactID 
        ///FROM 
        ///	[Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01] AS T
        ///LEFT OUTER JOIN 
        ///	[Code] AS C
        ///ON 
        ///	T.CodeArtifactID = C.ArtifactID AND T.CodeTypeID = C.CodeTypeID
        ///WHERE 
        ///	C.ArtifactID IS NULL)
        ///BEGIN
        ///RAISERROR(&apos;Some supplied choice ids are invalid&apos;,16,1)
        ///END
        ///ELSE
        ///BEGIN
        ///SET STATISTICS TIME ON;
        ///
        ///
        ///PRINT &apos;Mass Import Section: LinkCodeTypeId=101&apos;;
        ///
        ///WITH CTE (DocumentArtifactID, CodeArtifactID)
        ///AS
        ///(
        ///	SELECT DISTINCT
        ///		N.ArtifactID, C.CodeArtifactID
        ///	FROM 
        ///		[Resour [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ChoicesImportServiceTests_ShouldIncludeDistinctClause {
            get {
                return ResourceManager.GetString("ChoicesImportServiceTests_ShouldIncludeDistinctClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()
        ///INSERT INTO [Resource].[RELNATTMPPART_DCD09DF6-A4C7-4DF0-B963-0050C7809038]
        ///SELECT
        ///	N.[kCura_Import_ID],
        ///	0 [kCura_Import_IsNew],
        ///	D.[ArtifactID],
        ///	NULL,
        ///	100123 [FieldArtifactID]
        ///FROM (
        ///	SELECT
        ///		MIN(N.[kCura_Import_ID]) [kCura_Import_ID],
        ///		N.[SingleObjectFieldName]
        ///	FROM [Resource].[RELNATTMP_DCD09DF6-A4C7-4DF0-B963-0050C7809038] N
        ///	GROUP BY N.[SingleObjectFieldName]
        ///) N
        ///JOIN [SingleObjectTableName] D ON D.[SingleObjectIdFieldColumnName] = N.[SingleObjectFieldName];
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NativeSqlQueryTest_ExpecteCreateAssociatedObjectsForSingleObjectFieldByName {
            get {
                return ResourceManager.GetString("NativeSqlQueryTest_ExpecteCreateAssociatedObjectsForSingleObjectFieldByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()DECLARE @hasImagesCodeTypeID INT = (SELECT TOP 1 CodeTypeID FROM CodeType WHERE [Name] = &apos;HasImages&apos;)DECLARE @hasImagesCodeArtifactID INT = (SELECT TOP 1 [ArtifactID] FROM [Code] WHERE [Name]=&apos;No&apos; AND CodeTypeID = @hasImagesCodeTypeID )
        ///
        ///;WITH IDSource AS (
        ///	SELECT
        ///		[ArtifactTypeID] = 10,
        ///		[ParentArtifactID] = [kCura_Import_ParentFolderID],
        ///		[AccessControlListID] = (SELECT [ParentAccessControlListID] FROM [Resource].[RELNATTMPPARENT_DCD09DF6-A4C7-4DF0-B963-0050C7809038 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NativeSqlQueryTest_ExpectedCreateDocumentsSqlStatement {
            get {
                return ResourceManager.GetString("NativeSqlQueryTest_ExpectedCreateDocumentsSqlStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()DECLARE @hasImagesCodeTypeID INT = (SELECT TOP 1 CodeTypeID FROM CodeType WHERE [Name] = &apos;HasImages&apos;)DECLARE @hasImagesCodeArtifactID INT = (SELECT TOP 1 [ArtifactID] FROM [Code] WHERE [Name]=&apos;No&apos; AND CodeTypeID = @hasImagesCodeTypeID )
        ///
        ///;WITH IDSource AS (
        ///	SELECT
        ///		[ArtifactTypeID] = 10,
        ///		[ParentArtifactID] = [kCura_Import_ParentFolderID],
        ///		[AccessControlListID] = (SELECT [ParentAccessControlListID] FROM [Resource].[RELNATTMPPARENT_DCD09DF6-A4C7-4DF0-B963-0050C7809038 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string NativeSqlQueryTest_ExpectedCreateDocumentsSqlStatementWithExtractedText {
            get {
                return ResourceManager.GetString("NativeSqlQueryTest_ExpectedCreateDocumentsSqlStatementWithExtractedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()
        ///INSERT INTO [Resource].[RELNATTMPPART_DCD09DF6-A4C7-4DF0-B963-0050C7809038]
        ///SELECT
        ///	N.[kCura_Import_ID],
        ///	0 [kCura_Import_IsNew],
        ///	D.[ArtifactID],
        ///	NULL,
        ///	100123 [FieldArtifactID]
        ///FROM (
        ///	SELECT
        ///		MIN(N.[kCura_Import_ID]) [kCura_Import_ID],
        ///		N.[SingleObjectFieldName]
        ///	FROM [Resource].[RELNATTMP_DCD09DF6-A4C7-4DF0-B963-0050C7809038] N
        ///	GROUP BY N.[SingleObjectFieldName]
        ///) N
        ///JOIN [SingleObjectTableName] D ON D.[SingleObjectIdFieldColumnName] = N.[SingleObjectFieldName];
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSelfReferencedSingleObjectFieldByName {
            get {
                return ResourceManager.GetString("ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSelfReferencedSingleObjectF" +
                        "ieldByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()
        ///INSERT INTO [Resource].[RELNATTMPPART_DCD09DF6-A4C7-4DF0-B963-0050C7809038]
        ///SELECT
        ///	N.[kCura_Import_ID],
        ///	0 [kCura_Import_IsNew],
        ///	D.[ArtifactID],
        ///	NULL,
        ///	100123 [FieldArtifactID]
        ///FROM (
        ///	SELECT
        ///		MIN(N.[kCura_Import_ID]) [kCura_Import_ID],
        ///		N.[SingleObjectFieldName]
        ///	FROM [Resource].[RELNATTMP_DCD09DF6-A4C7-4DF0-B963-0050C7809038] N
        ///	GROUP BY N.[SingleObjectFieldName]
        ///) N
        ///JOIN [SingleObjectTableName] D ON D.[SingleObjectIdFieldColumnName] = N.[SingleObjectFieldName];
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSingleObjectDocumentFieldByName {
            get {
                return ResourceManager.GetString("ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSingleObjectDocumentFieldBy" +
                        "Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()
        ///INSERT INTO [Resource].[RELNATTMPPART_DCD09DF6-A4C7-4DF0-B963-0050C7809038]
        ///SELECT
        ///	N.[kCura_Import_ID],
        ///	0 [kCura_Import_IsNew],
        ///	D.[ArtifactID],
        ///	NULL,
        ///	100123 [FieldArtifactID]
        ///FROM (
        ///	SELECT
        ///		MIN(N.[kCura_Import_ID]) [kCura_Import_ID],
        ///		N.[SingleObjectFieldName]
        ///	FROM [Resource].[RELNATTMP_DCD09DF6-A4C7-4DF0-B963-0050C7809038] N
        ///	GROUP BY N.[SingleObjectFieldName]
        ///) N
        ///JOIN [SingleObjectTableName] D ON D.[SingleObjectIdFieldColumnName] = N.[SingleObjectFieldName];
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSingleObjectFieldByName {
            get {
                return ResourceManager.GetString("ObjectsSqlQueryTest_ExpectedCreateAssociatedObjectsForSingleObjectFieldByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @now DATETIME = GETUTCDATE()
        ///
        ///;WITH IDSource AS (
        ///	SELECT
        ///		[ArtifactTypeID] = 1000050,
        ///		[ParentArtifactID] = [kCura_Import_ParentFolderID],
        ///		[AccessControlListID] = (SELECT [ParentAccessControlListID] FROM [Resource].[RELNATTMPPARENT_DCD09DF6-A4C7-4DF0-B963-0050C7809038] WHERE [kCura_Import_ID] = N.[kCura_Import_ID]),
        ///		[AccessControlListIsInherited] = 1,
        ///		[CreatedOn] = @now,
        ///		[LastModifiedOn] = @now,
        ///		[CreatedBy] = @auditUserID,
        ///		[LastModifiedBy] = @auditUserID,
        ///		[TextIdentifier] = N.[KeyFi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ObjectsSqlQueryTest_ExpectedCreateObjectsSqlStatement {
            get {
                return ResourceManager.GetString("ObjectsSqlQueryTest_ExpectedCreateObjectsSqlStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Format replace:
        ///	---------------
        ///	0: native tmp table
        ///	1: code tmp table
        ///	2: code type id
        ///	3: identifier column name
        ///	4: CodeArtifact partition table name
        ///	5: field overlay switch statement
        ///	6: staging table with audit information
        ///	7: field artifactId
        ///*/
        ///
        ///
        ///IF EXISTS (
        ///    SELECT CodeArtifactID FROM [Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01]
        ///    WHERE CodeTypeID = 102
        ///    AND NOT EXISTS (SELECT 1 FROM [Code] WHERE [CodeTypeID] = 102 AND [ArtifactID] = [CodeArtifactID])
        ///)
        ///BEGIN
        ///	RAISER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OldChoicesImportServiceTests_ShouldExecuteQueryForMultiChoice {
            get {
                return ResourceManager.GetString("OldChoicesImportServiceTests_ShouldExecuteQueryForMultiChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Format replace:
        ///	---------------
        ///	0: native tmp table
        ///	1: code tmp table
        ///	2: code type id
        ///	3: identifier column name
        ///	4: CodeArtifact partition table name
        ///	5: field overlay switch statement
        ///	6: staging table with audit information
        ///	7: field artifactId
        ///*/
        ///
        ///
        ///IF EXISTS (
        ///    SELECT CodeArtifactID FROM [Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01]
        ///    WHERE CodeTypeID = 101
        ///    AND NOT EXISTS (SELECT 1 FROM [Code] WHERE [CodeTypeID] = 101 AND [ArtifactID] = [CodeArtifactID])
        ///)
        ///BEGIN
        ///	RAISER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OldChoicesImportServiceTests_ShouldExecuteQueryForSingleChoice {
            get {
                return ResourceManager.GetString("OldChoicesImportServiceTests_ShouldExecuteQueryForSingleChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Format replace:
        ///	---------------
        ///	0: native tmp table
        ///	1: code tmp table
        ///	2: code type id
        ///	3: identifier column name
        ///	4: CodeArtifact partition table name
        ///	5: field overlay switch statement
        ///	6: staging table with audit information
        ///	7: field artifactId
        ///*/
        ///
        ///
        ///IF EXISTS (
        ///    SELECT CodeArtifactID FROM [Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01]
        ///    WHERE CodeTypeID = 101
        ///    AND NOT EXISTS (SELECT 1 FROM [Code] WHERE [CodeTypeID] = 101 AND [ArtifactID] = [CodeArtifactID])
        ///)
        ///BEGIN
        ///	RAISER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OldChoicesImportServiceTests_ShouldExecuteQueryForTwoChoices {
            get {
                return ResourceManager.GetString("OldChoicesImportServiceTests_ShouldExecuteQueryForTwoChoices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///	Format replace:
        ///	---------------
        ///	0: native tmp table
        ///	1: code tmp table
        ///	2: code type id
        ///	3: identifier column name
        ///	4: CodeArtifact partition table name
        ///	5: field overlay switch statement
        ///	6: staging table with audit information
        ///	7: field artifactId
        ///*/
        ///
        ///
        ///IF EXISTS (
        ///    SELECT CodeArtifactID FROM [Resource].[RELNATTMPCOD_974a2b26_d665_4f42_8b3b_31949b335a01]
        ///    WHERE CodeTypeID = 101
        ///    AND NOT EXISTS (SELECT 1 FROM [Code] WHERE [CodeTypeID] = 101 AND [ArtifactID] = [CodeArtifactID])
        ///)
        ///BEGIN
        ///	RAISER [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OldChoicesImportServiceTests_ShouldIncludeDistinctClause {
            get {
                return ResourceManager.GetString("OldChoicesImportServiceTests_ShouldIncludeDistinctClause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- CACHE PREPARATION SECTION
        ///
        ///										-- Check for table existence
        ///											-- if it exists, check that it&apos;s not stale (has rows, but all are older than specified min)
        ///												-- if it&apos;s stale data, delete out the rows
        ///										-- if it doesn&apos;t exist, create the table
        ///										-- NOTE: Purposely not using the CURRENT_TIMESTAMP for the date column, as it requires row update, and you may not have one
        ///
        ///											IF OBJECT_ID(&apos;[Resource].[NAT_FOLDER_100_CONFIG]&apos;,&apos;TABLE&apos;) IS NULL
        ///												BEGIN
        ///			 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UpdateBulkTableWithCreatedFoldersAndRetrieveFolderPathsToCreate_ToggleOff {
            get {
                return ResourceManager.GetString("UpdateBulkTableWithCreatedFoldersAndRetrieveFolderPathsToCreate_ToggleOff", resourceCulture);
            }
        }
    }
}
